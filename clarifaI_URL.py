__author__ = 'APImonkey'

## Todo: find out why JSON only shows a length of 4 instead of 10
## Todo: inject tags back into files metadata
## Todo: save tags into a google sheet or CSV


import os
import requests
import json
#import csv
import settings
from clarifai.client import ClarifaiApi


##set python environment vars for clarifai api authentification and initiate API instance
os.environ['CLARIFAI_APP_ID']= settings.CLARIFAI_APP_ID
os.environ['CLARIFAI_APP_SECRET']=settings.CLARIFAI_APP_SECRET
clarifai_api = ClarifaiApi()

imageList=[]
#tagsList=[]


##-------------------------GET FILE LIST--------
## search query searching for 'keyword' related images in the AM photography collection

keyword='Beer'

AMrecord = requests.get('http://api.aucklandmuseum.com/v1/search/collectionsonline/_search?api_key='+settings.AM_API_KEY+'&q=%22'+keyword+'%22+AND+department:photographs+AND+primaryRepresentation:http*')
parsed_json = json.loads(AMrecord.text)

#print parsed_json

for i in range (len(parsed_json)):
    imagelink = parsed_json ["hits"]["hits"][i]['_source']['primaryRepresentation']
    imagepath = imagelink.replace('http://rdf.aucklandmuseum.com/','http://webapi.aucklandmuseum.com/media/')
    image = imagepath + str('/standard.jpg')
    imageList.append(image)

    #print image

##-----------------------RUN QUERIES---------

##  query ClarifAI API and receive back results.
for i in range (len(imageList)):

    ## Parse JSON file. The ClarifAI API response is interpreted a combination of nested dicts and lists by Python.
    object = clarifai_api.tag_image_urls(imageList[i])
    results = object.get('results')
    firstNode = results[0]
    result= firstNode.get('result')
    tag = result.get('tag')
    classes=tag.get('classes')  #these are the actual tags generated by ClarifAI

    ## get the colors using a different API while we are at it...
    colorSummary = requests.get('http://mkweb.bcgsc.ca/color-summarizer/?url='+imageList[i]+'&precision=low&num_clusters=3&json=1')
    parsed_colorSummary = json.loads(colorSummary.text)

    hexColor1=parsed_colorSummary['clusters']['0']['hex'][0]
    hexColor2=parsed_colorSummary['clusters']['1']['hex'][0]
    hexColor3=parsed_colorSummary['clusters']['2']['hex'][0]



##-------------------------PRINT RESULTS------
    print imageList[i] +', ',

    print 'colors: ' + hexColor1 +','+ hexColor2 +','+hexColor3

    for i in range (len(classes)):
        print str(classes[i]),",",

    print '\n'






